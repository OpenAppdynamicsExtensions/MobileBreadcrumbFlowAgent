/*
 * This build file was auto generated by running the Gradle 'buildSetup' task
 * by 'stefan.marx' at '09.10.13 14:44' with Gradle 1.7
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/1.7/userguide/tutorial_java_projects.html
 */


apply plugin: 'application'
//apply plugin: 'idea'
apply plugin: 'maven'
apply from: 'base.gradle'


version='1.0'
mainClassName='com.appdynamics.ace.custom.agent.mobileworkflowagent.AppMain'


repositories {
    jcenter()
    maven {
        url "https://raw.github.com/Appdynamics/artifact-library/master/repo/"
//        url "file:///vlab/maven/artifact-library/repo/"
    }
    maven {
        url "file:///vlab/maven/private-artifact-library/repo/"
    }
}

// no transitive Dependencies for compile only APIs
configurations.compileOnly.transitive=false

configurations {
    agentRuntime
    agentBinary
}


dependencies {
    compile ("log4j:log4j:1.2.17")
    compile "com.appdynamics:machineagent:4.1.0"
    compile 'com.appdynamics.ace.cli:CommandFramework:+'
    compile   'com.appdynamics.ace.adql:Client:0.3'


    //jackson
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.6'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.8.6'
    compile 'org.apache.commons:commons-lang3:3.5'

    agentBinary "com.appdynamics:MachineAgent:4.2.10@zip"
    agentRuntime 'com.fasterxml.jackson.core:jackson-databind:2.8.6'
    agentRuntime 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.8.6'
    agentRuntime 'org.apache.commons:commons-lang3:3.5'
    agentRuntime   'com.appdynamics.ace.adql:Client:+'


}


generateMonitorXML {
    agentDescription = "DB Mobile Workflow Agent"
    timeout = 120
    taskArguments = [
            'config': ['./conf/dbSample.yml',"Config file to read from"],
            'delay': ["${60*15}","newest sessions to retrieve in seconds (default:15 minutes old)"],
            'windowSize': ["${60*5}","Session window (oldesSession - newestSession in seconds)"],
            'purgeSessions': ["${60*20}","How long to keep old sessions in cache, should be similar to the oldes possible Session."],
            'metricPrefix': ["Custom Metrics","Custom Metrics prefix. \n" +
                    " Use 'Server|Component:<id>' with the ID of the tier that this Agent bounds to \n" +
                    " to make this a tier private metric."]// query window 2 Hours

    ]
    agentName=AgentName
    mainClass = 'com.appdynamics.ace.custom.agent.mobileworkflowagent.DBWorkflowAgent'
    classpath = "${AgentName}.jar"    // be carefull this is a hardcoded Name !!!
}


jar {
    archiveName="${AgentName}.jar"
}


task packageAgent (type: Zip) {
    archiveName = AgentPackageName+".zip"
    into(AgentName+"/lib") {
        from(project.configurations.agentRuntime)
    }
    into(AgentName) {
        from jar
        from generateMonitorXML

    }

    into(AgentName+"/conf") {
        from("./src/main/conf")
    }

}

tasks.assemble.dependsOn(packageAgent)



task installSandbox() {
    doLast {
        copy {
            configurations.agentBinary.filter { it.toString().endsWith(".zip") }.each {
                from zipTree(it)
            }
            into 'build/sandbox/agent'
        }
        copy {
            files("build/distributions/"+AgentPackageName+".zip").each{
                from zipTree(it)
            }
            into 'build/sandbox/agent/monitors'
        }
    }
}

tasks.installSandbox.dependsOn(packageAgent)
tasks.packageAgent.dependsOn(jar)
